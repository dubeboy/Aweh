{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Aweh API",
    "description": "Hosts the back-end logic for the Aweh mobile application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "localhost:8080",
      "description": "Local Server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Backend service for managing user accounts"
    },
    {
      "name": "Posts",
      "description": "Backend service for managing posts"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
                "type": "array",
                "items": {"$ref": "#/definitions/User"}
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user in system",
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/definitions/User"}
            }
          }
        },
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/userId"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/api/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of the user that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "User with id",
            "schema": {
              "$ref": "#/definitions/userId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      },
      "put": {
        "summary": "Update user with given ID",
        "tags": ["Users"],
        "requestBody": {
          "description": "User object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/userId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Usr not found."
          }
        }
      },
      "delete": {
        "summary": "Delete User with given ID",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "Delete User with userId",
            "schema": {
              "$ref": "#/definitions/userId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/userId"
            }
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    }
  },
  "definitions": {
    "userId": {
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "users": {
      "type": "object",
      "properties": {
        "users": {
          "type": "User"
        }
      }
    },
    "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "street": "string",
            "city": "string",
            "postCode": "string",
            "country": "string"
          },
          "isBusiness": {
            "type": "boolean"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "profilePicUUID": {
            "type": "string"
          },
          "reputation": {
            "type": "object",
            "properties": {
              "totalPoints": {
                "type": "integer"
              },
              "level": {
                "type": "string"
              }
            }
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "phoneNumber": {
            "type": "string"
          },
          "inbox": {
            "type": "object",
            "properties": {
              "messages": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "isArchived": { "type": "boolean" },
              "isDeleted": { "type": "boolean" }
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "body": "string",
          "timestamp": "dateTime",
          "sender": {
            "username": "string",
            "profilePicUUID": "string"
          },
          "recipient": {
            "username": "string",
            "profilePicUUID": "string"
          },
          "isSent": "boolean",
          "isRead": "boolean",
          "isDeleted": "boolean"
        }
      },
      "Interest": {
        "type": "object",
        "properties": {
          "name": "string",
          "description": "string"
        }
      }
  }
}
